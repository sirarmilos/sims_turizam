<Window x:Class="InitialProject.View.SchedulingRenovation"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InitialProject.View"
        xmlns:cvt="clr-namespace:InitialProject.Converters"
        
        xmlns:cmd="clr-namespace:InitialProject.Commands.OwnerCommands"
        
        mc:Ignorable="d"
        Title="Renovate accommodation" Height="845" Width="678" Icon="../Resources/Images/logo_icon.ico"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>

        <Style x:Key="VerticalContentAlignmentCenter" TargetType="{x:Type DataGridCell}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type DataGridCell}">

                        <Grid Background="{TemplateBinding Background}">

                            <ContentPresenter VerticalAlignment="Center" Margin="2,0,0,0"/>

                        </Grid>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>

    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="cmd:RoutedCommands.FindAvailableDates" CanExecute="FindAvailableDates_CanExecute" Executed="FindAvailableDates_Executed"></CommandBinding>
        <CommandBinding Command="cmd:RoutedCommands.RenovateAccommodation" CanExecute="RenovateAccommodation_CanExecute" Executed="RenovateAccommodation_Executed"></CommandBinding>
        <CommandBinding Command="cmd:RoutedCommands.Cancel" CanExecute="Cancel_CanExecute" Executed="Cancel_Executed"></CommandBinding>
    </Window.CommandBindings>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="690" />
            <RowDefinition Height="130" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="225" />
            <ColumnDefinition Width="453" />
        </Grid.ColumnDefinitions>

        <GroupBox Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Header="Renovate accommodation" HorizontalAlignment="Left" Height="665" VerticalAlignment="Top" Width="612" Margin="25,25,25,0" FontSize="16" BorderThickness="1, 1, 1, 1" BorderBrush="Gray">

            <Grid>

                <Grid.RowDefinitions>
                    <RowDefinition Height="55" />
                    <RowDefinition Height="35" />
                    <RowDefinition Height="35" />
                    <RowDefinition Height="35" />
                    <RowDefinition Height="50" />
                    <RowDefinition Height="205" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="205" />
                    <ColumnDefinition Width="407" />
                </Grid.ColumnDefinitions>

                <Label Target="{x:Reference cbAccommodationNames}" Grid.Column="0" Grid.Row="0" Content="Accommodation name:" HorizontalAlignment="Left" Height="30" VerticalAlignment="Bottom" MouseLeftButtonUp="labeltbFocus" Margin="25,25,0,0" FontSize="13"/>
                <ComboBox x:Name="cbAccommodationNames" Grid.Column="1" Grid.Row="0" ItemsSource="{Binding AccommodationNames, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="200" SelectedItem="{Binding SelectedAccommodationName}" SelectionChanged="SelectionChanged" Margin="0,30,0,0" FontSize="13"/>

                <Label Target="{x:Reference dpStartDate}" Grid.Column="0" Grid.Row="1" Content="Start date:" HorizontalAlignment="Left" Height="30" VerticalAlignment="Center" MouseLeftButtonUp="labeltbFocus" Margin="25,0,0,0" FontSize="13"/>
                <DatePicker x:Name="dpStartDate" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Height="24" VerticalAlignment="Center" Width="200" FontSize="13" SelectedDateChanged="StartDateSelectionChanged">
                    <DatePicker.Resources>
                        <Style TargetType="DatePickerTextBox">
                            <Setter Property="IsReadOnly" Value="True"/>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>

                <Label Target="{x:Reference dpEndDate}" Grid.Column="0" Grid.Row="2" Content="End date:" HorizontalAlignment="Left" Height="30" VerticalAlignment="Center" MouseLeftButtonUp="labeltbFocus" Margin="25,0,0,0" FontSize="13"/>
                <DatePicker x:Name="dpEndDate" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" Height="24" VerticalAlignment="Center" Width="200" FontSize="13" SelectedDateChanged="EndDateSelectionChanged">
                    <DatePicker.Resources>
                        <Style TargetType="DatePickerTextBox">
                            <Setter Property="IsReadOnly" Value="True"/>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>
                <Label x:Name="labelErrorDate" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Content="Start date is greater than end date" VerticalAlignment="Bottom" MouseLeftButtonUp="labeltbFocus" Margin="203,0,0,25" FontSize="12" Foreground="Red"/>

                <Label Target="{x:Reference tbDuration}"  Grid.Column="0" Grid.Row="3" Content="Duration:" HorizontalAlignment="Left" Height="30" VerticalAlignment="Center" Margin="25,0,0,0" FontSize="13"/>
                <TextBox x:Name="tbDuration" Grid.Column="1" Grid.Row="3" Text="{Binding Path=DurationCheck, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="200" FontSize="13" TextChanged="CheckErrorDurationTextChanged"/>
                <TextBlock x:Name="textBlockErrorDuration0" Grid.Column="1" Grid.Row="3" VerticalAlignment="Bottom" Margin="190,0,0,2" FontSize="12" Foreground="Red" TextWrapping="WrapWithOverflow" TextAlignment="Center">
                    Duration must be number <LineBreak/> greather then 0
                </TextBlock>

                <TextBlock x:Name="textBlockErrorDuration1" Grid.Column="1" Grid.Row="3" VerticalAlignment="Bottom" Margin="190,0,0,2" FontSize="12" Foreground="Red" TextWrapping="WrapWithOverflow" TextAlignment="Center">
                    Duration must be shorter than the distance between the dates
                </TextBlock>

                <Button Grid.Column="1" Grid.Row="4" HorizontalAlignment="Left" Height="40" VerticalAlignment="Top" Width="100" Command="cmd:RoutedCommands.FindAvailableDates" Margin="100,5,0,0" FontSize="13">
                    <TextBlock TextAlignment="Center">Find dates<LineBreak/>(CTRL + F)</TextBlock>
                </Button>

                <DataGrid x:Name="dgFreeDates" LoadingRow="LoadingRowForDgFreeDates" Grid.Column="0" Grid.Row="5" Grid.ColumnSpan="2" ItemsSource="{Binding AvailableDateSlots, Mode=OneWay}" SelectedItem="{Binding Path=SelectedDateSlot, Mode=TwoWay}" AutoGenerateColumns="False" SelectionMode="Single" SelectionUnit="FullRow" IsReadOnly="True" SelectionChanged="RenovateButtonEnable" HorizontalAlignment="Left" Height="175" VerticalAlignment="Bottom" Width="550" Margin="25,0,25,0" CellStyle="{StaticResource VerticalContentAlignmentCenter}" RowHeight="30" FontSize="13">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Start date" Binding="{Binding StartDate, StringFormat=d, ConverterCulture=en-GB}" Width="275"/>
                        <DataGridTextColumn Header="End date" Binding="{Binding EndDate, StringFormat=d, ConverterCulture=en-GB}" Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>

                <Label Target="{x:Reference tbDescription}" Grid.Column="0" Grid.Row="6" Content="Description of the renovation:" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" MouseLeftButtonUp="labeltbFocus" Margin="25,30,0,0" FontSize="13"/>
                <TextBox x:Name="tbDescription" Grid.Column="1" Grid.Row="6" TextWrapping="Wrap" Text="{Binding Path=Description, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Height="175" VerticalAlignment="Top" Width="370" Margin="0,30,0,0" FontSize="13"/>

            </Grid>

        </GroupBox>

        <Button x:Name="buttonRenovate" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Width="175" Command="cmd:RoutedCommands.RenovateAccommodation" Margin="50,25,0,0">
            <TextBlock TextAlignment="Center" FontSize="14">Renovate<LineBreak/>(CTRL + N)</TextBlock>
        </Button>
        
        <Button x:Name="buttonCancel" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Width="175" Command="cmd:RoutedCommands.Cancel" Margin="437,25,0,0">
            <TextBlock TextAlignment="Center" FontSize="14">Cancel<LineBreak/>(ESC)</TextBlock>
        </Button>

    </Grid>

</Window>
